const fetch = require('node-fetch');

/**
 * Checks if a website is available.
 * @param {string} url - The website URL to check.
 * @param {string} [webhookURL] - Optional Discord Webhook URL for notifications.
 * @param {number} [intervalSeconds] - Interval in seconds (min 30).
 * @param {number} [loopCount] - Number of times to check (max 50).
 * @returns {Promise<void>}
 */
async function isSiteAvailable(url, webhookURL = null, intervalSeconds = null, loopCount = null) {
  // Eƒüer saniye veya loopCount yoksa sadece 1 kez √ßalƒ±≈üsƒ±n
  if (!intervalSeconds && !loopCount) {
    await checkOnce(url, webhookURL);
    return;
  }

  // Saniye 30'dan k√º√ß√ºkse 30 yap, loop 50'den b√ºy√ºkse 50 yap
  intervalSeconds = intervalSeconds ? Math.max(intervalSeconds, 30) : null;
  loopCount = loopCount ? Math.min(loopCount, 50) : 3; // Eƒüer loopCount verilmemi≈üse 3 yap

  console.log(`üîÑ Checking ${url} every ${intervalSeconds} seconds, repeating ${loopCount} times.`);

  let count = 0;

  const checkWebsite = async () => {
    await checkOnce(url, webhookURL);
    count++;

    if (count >= loopCount) {
      console.log(`‚úÖ Finished checking ${url} ${loopCount} times.`);
      clearInterval(interval);
    }
  };

  // ƒ∞lk kontrol√º hemen yap
  checkWebsite();

  // Eƒüer saniye verilmi≈üse, belirli aralƒ±klarla tekrar kontrol et
  if (intervalSeconds) {
    const interval = setInterval(checkWebsite, intervalSeconds * 1000);
  }
}

/**
 * Runs a single check on a website.
 * @param {string} url - Website URL.
 * @param {string} [webhookURL] - Optional webhook URL.
 * @returns {Promise<boolean>} - Returns true if site is up.
 */
async function checkOnce(url, webhookURL) {
  try {
    const response = await fetch(url, { method: 'GET' });
    const isUp = response.ok;
    console.log(isUp ? `‚úÖ ${url} is UP!` : `‚ùå ${url} is DOWN!`);

    if (webhookURL) {
      await sendDiscordNotification(webhookURL, isUp ? `‚úÖ Website is UP: ${url}` : `‚ùå Website is DOWN: ${url}`);
    }

    return isUp;
  } catch (error) {
    console.log(`‚ùå ${url} is DOWN!`);
    if (webhookURL) {
      await sendDiscordNotification(webhookURL, `@everyone ‚ùå Website is DOWN: ${url}`);
    }
    return false;
  }
}

/**
 * Sends a notification to Discord.
 * @param {string} webhookURL - The Discord Webhook URL.
 * @param {string} message - The message to send.
 * @returns {Promise<void>}
 */
async function sendDiscordNotification(webhookURL, message) {
  try {
    const response = await fetch(webhookURL, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ content: message })
    });

    if (response.status === 204) {
      console.log('‚úÖ Discord notification sent successfully!');
    } else {
      console.error('‚ùå Failed to send Discord notification:', response.statusText);
    }
  } catch (error) {
    console.error('‚ùå Error sending Discord notification:', error.message);
  }
}

module.exports = {
  isSiteAvailable
};
